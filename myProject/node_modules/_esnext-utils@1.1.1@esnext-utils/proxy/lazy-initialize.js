/**
 * @author Kuitos
 * @homepage https://github.com/kuitos/
 * @since 2016-10-31
 */
"use strict";
var initialize = function (origin, lazyInitialization) {
    var initialized = false;
    var initializedTarget = null;
    var initialization = function (target) {
        if (!initialized) {
            initializedTarget = lazyInitialization(target);
            initialized = true;
        }
    };
    var get = function (target, property) {
        initialization(target);
        return initializedTarget[property];
    };
    var apply = function (target, thisArg, argumentsList) {
        initialization(target);
        return initializedTarget.apply(thisArg, argumentsList);
    };
    return typeof origin === 'function' ? { get: get, apply: apply } : { get: get };
};
function lazyInitialize(target, lazyInitialization) {
    return new Proxy(target, initialize(target, lazyInitialization));
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = lazyInitialize;
//# sourceMappingURL=lazy-initialize.js.map
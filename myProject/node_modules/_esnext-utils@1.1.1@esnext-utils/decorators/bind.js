/**
 * @author Kuitos
 * @homepage https://github.com/kuitos/
 * @since 2016-04-06
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = function (target, name, descriptor) {
    if (!descriptor) {
        throw new Error('can not use Bind decorator with a constructor!');
    }
    var fn = descriptor.value || target[name];
    // use function string as identifier which can ensure every function uniquely after wrapped
    // we can not use Function.name as identifier because its name may be empty(anonymous function)
    // or defined by other ways(such as Object.defineProperty)
    var fnName = "__" + fn + "Fn__";
    // 定义访问器属性的同时不能定义value跟writable
    // @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty
    delete descriptor.value;
    delete descriptor.writable;
    descriptor.set = function (value) {
        this[fnName] = value;
    };
    descriptor.get = function () {
        return this[fnName] || (this[fnName] = fn.bind(this));
    };
    return descriptor;
};
//# sourceMappingURL=bind.js.map
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.isClass = isClass;
exports.isNumber = isNumber;
exports.isRegExp = isRegExp;
exports.isObject = isObject;
exports.isString = isString;
exports.isFunction = isFunction;
exports.isPromiseLike = isPromiseLike;
exports.isElement = isElement;
exports.isDefined = isDefined;
/**
 * @author Kuitos
 * @homepage https://github.com/kuitos/
 * @since 2016-06-07
 */

var msie = window.document.documentMode;
var toString = Object.prototype.toString;

function isClass(func) {
	// IE 9-11 do not support classes and IE9 leaks with the code below.
	if (msie <= 11) {
		return false;
	}
	// Workaround for MS Edge.
	// Check https://connect.microsoft.com/IE/Feedback/Details/2211653
	return typeof func === 'function' && /^(?:class\s|constructor\()/.test(Function.prototype.toString.call(func));
}

function isNumber() {
	return typeof value === 'number';
}

function isRegExp(value) {
	return toString.call(value) === '[object RegExp]';
}

// the specification
// @see https://github.com/kuitos/angular-es-utils/pull/5
function isObject(value) {
	return value != null && ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'function');
}

var isArray = exports.isArray = Array.isArray;

function isString(value) {
	return typeof value === 'string';
}

function isFunction(value) {
	return typeof value === 'function';
}

function isPromiseLike(obj) {
	return !!obj && typeof obj.then === 'function';
}

function isElement(node) {
	return !!(node && (node.nodeName || node.prop && node.attr && node.find)); // We have an on and find method part of jQuery API.
}

function isDefined(value) {
	return typeof value !== 'undefined';
}
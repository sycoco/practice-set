'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.defaultHttpConfigs = exports.COMMON_HEADERS = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /**
                                                                                                                                                                                                                                                                   * @author Kuitos
                                                                                                                                                                                                                                                                   * @homepage https://github.com/kuitos/
                                                                                                                                                                                                                                                                   * @since 2016-05-11
                                                                                                                                                                                                                                                                   */

exports.setApiPrefix = setApiPrefix;

var _angular = require('angular');

var _angular2 = _interopRequireDefault(_angular);

var _lazyInitialize = require('esnext-utils/proxy/lazy-initialize');

var _lazyInitialize2 = _interopRequireDefault(_lazyInitialize);

var _injector = require('../injector');

var _injector2 = _interopRequireDefault(_injector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var apiPrefix = '';

function setApiPrefix(prefix) {
	apiPrefix = prefix;
}

var COMMON_HEADERS = exports.COMMON_HEADERS = {
	'Cache-Control': 'no-cache',
	'X-Requested-With': 'https://github.com/kuitos'
};

var defaultHttpConfigs = exports.defaultHttpConfigs = {
	headers: {},
	interceptor: {}
};

exports.default = function (url, cache, params) {
	var additionalActions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
	var additionalHttpConfigs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
	var options = arguments[5];


	var requestConfigs = _angular2.default.merge({}, { headers: COMMON_HEADERS }, defaultHttpConfigs, additionalHttpConfigs);

	// 将默认配置复制到新添加的action里
	Object.keys(additionalActions).forEach(function (action) {
		additionalActions[action] = _angular2.default.merge({}, requestConfigs, additionalActions[action]);
	});

	// 默认cache为defaultRestCache
	// 自定义配置(配合$http interceptor)
	var DEFAULT_ACTIONS = {
		// 查询，结果为对象
		'get': _extends({ method: 'GET', cache: cache }, requestConfigs),
		// 查询，结果为数组
		'query': _extends({ method: 'GET', isArray: true, cache: cache }, requestConfigs),
		// 保存(新增)
		'save': _extends({ method: 'POST', cache: cache }, requestConfigs),
		// 修改(全量)
		'update': _extends({ method: 'PUT', cache: cache }, requestConfigs),
		// 修改(部分)
		'patch': _extends({ method: 'PATCH', cache: cache }, requestConfigs),
		// 逻辑删除
		'remove': _extends({ method: 'DELETE', cache: cache }, requestConfigs),
		// 物理删除
		'delete': _extends({ method: 'DELETE', cache: cache }, requestConfigs)
	};

	return (0, _lazyInitialize2.default)({}, function () {
		return _injector2.default.get('$resource')(apiPrefix + url, params, _extends({}, DEFAULT_ACTIONS, additionalActions), options);
	});
};
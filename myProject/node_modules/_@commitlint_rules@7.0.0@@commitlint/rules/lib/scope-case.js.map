{"version":3,"sources":["../src/scope-case.js"],"names":["ensure","negated","when","parsed","value","scope","checks","Array","isArray","map","check","case","result","some","r","list","c","join"],"mappings":";;;;;;AAAA;;IAAYA,M;;AACZ;;;;;;;;AAEA,MAAMC,UAAUC,QAAQA,SAAS,OAAjC;;kBAEe,CAACC,MAAD,EAASD,IAAT,EAAeE,KAAf,KAAyB;AAAA,OAChCC,KADgC,GACvBF,MADuB,CAChCE,KADgC;;;AAGvC,KAAI,CAACA,KAAL,EAAY;AACX,SAAO,CAAC,IAAD,CAAP;AACA;;AAED,OAAMC,SAAS,CAACC,MAAMC,OAAN,CAAcJ,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAhC,EAAyCK,GAAzC,CAA6CC,SAAS;AACpE,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC9B,UAAO;AACNR,UAAM,QADA;AAENS,UAAMD;AAFA,IAAP;AAIA;AACD,SAAOA,KAAP;AACA,EARc,CAAf;;AAUA,OAAME,SAASN,OAAOO,IAAP,CAAYH,SAAS;AACnC,QAAMI,IAAId,OAAOW,IAAP,CAAYN,KAAZ,EAAmBK,MAAMC,IAAzB,CAAV;AACA,SAAOV,QAAQS,MAAMR,IAAd,IAAsB,CAACY,CAAvB,GAA2BA,CAAlC;AACA,EAHc,CAAf;;AAKA,OAAMC,OAAOT,OAAOG,GAAP,CAAWO,KAAKA,EAAEL,IAAlB,EAAwBM,IAAxB,CAA6B,IAA7B,CAAb;;AAEA,QAAO,CACNhB,QAAQC,IAAR,IAAgB,CAACU,MAAjB,GAA0BA,MADpB,EAEN,uBAAQ,CAAE,YAAF,EAAeX,QAAQC,IAAR,IAAiB,KAAjB,GAAwB,IAAvC,EAA8C,MAAKa,IAAK,EAAxD,CAAR,CAFM,CAAP;AAIA,C","file":"scope-case.js","sourcesContent":["import * as ensure from '@commitlint/ensure';\nimport message from '@commitlint/message';\n\nconst negated = when => when === 'never';\n\nexport default (parsed, when, value) => {\n\tconst {scope} = parsed;\n\n\tif (!scope) {\n\t\treturn [true];\n\t}\n\n\tconst checks = (Array.isArray(value) ? value : [value]).map(check => {\n\t\tif (typeof check === 'string') {\n\t\t\treturn {\n\t\t\t\twhen: 'always',\n\t\t\t\tcase: check\n\t\t\t};\n\t\t}\n\t\treturn check;\n\t});\n\n\tconst result = checks.some(check => {\n\t\tconst r = ensure.case(scope, check.case);\n\t\treturn negated(check.when) ? !r : r;\n\t});\n\n\tconst list = checks.map(c => c.case).join(', ');\n\n\treturn [\n\t\tnegated(when) ? !result : result,\n\t\tmessage([`scope must`, negated(when) ? `not` : null, `be ${list}`])\n\t];\n};\n"]}